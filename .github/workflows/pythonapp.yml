name: Jelly Bot - CI Test

on: [push]

jobs:
  prepare:
    runs-on: windows-latest

    steps:
      - name: Print SHA
        shell: cmd
        run: |
          echo %GITHUB_SHA%

      - name: Print REF
        shell: cmd
        run: |
          echo %GITHUB_REF%

  flake8-checks:
    runs-on: windows-latest

    needs: [prepare]

    timeout-minutes: 10

    env:
      SECRET_KEY: ${{ secrets.DjangoSecretKey }}
      DJANGO_SETTINGS_MODULE: JellyBot.settings
      MONGO_URL: ${{ secrets.MongoDBURL }}
      MONGO_DB: 'GitHubActionTest#${{ github.run_number }}'
      LINE_SECRET: ${{ secrets.LINESecret }}
      LINE_TOKEN: ${{ secrets.LINEToken }}
      DISCORD_TOKEN: ${{ secrets.DiscordToken }}
      PRODUCTION: 0
      DEBUG: 1
      TEST: 1
      LOGGER: DISCORD_INTERNAL|40,MODEL_CHECK|30,PING_SPAM|10
      NO_FIELD_CHECK: 1
      GI_CLIENT_ID: ${{ secrets.GoogleIdentityClientID }}
      EMAIL_ACCOUNT: ${{ secrets.EmailAccount }}
      EMAIL_PASSWORD: ${{ secrets.EmailPassword }}
      SERVICE_SHORT_URL: http://rnnx.cc
      DDNS_PASSWORD: ${{ secrets.DDNSPassword }}
      IMGUR_CLIENT_ID: ${{ secrets.ImgurClientID }}
      DDNS_HOST: bot
      DDNS_DOMAIN: raenonx.cc

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install flake8
        run: |
          pip install flake8

      - name: flake8 - error check
        run: |
          flake8 . --config .flake8-error

      - name: flake8 - style check
        run: |
          flake8 . --config .flake8-style

  pylint-checks:
    runs-on: windows-latest

    needs: [prepare]

    timeout-minutes: 10

    env:
      SECRET_KEY: ${{ secrets.DjangoSecretKey }}
      DJANGO_SETTINGS_MODULE: JellyBot.settings
      MONGO_URL: ${{ secrets.MongoDBURL }}
      MONGO_DB: 'GitHubActionTest#${{ github.run_number }}'
      LINE_SECRET: ${{ secrets.LINESecret }}
      LINE_TOKEN: ${{ secrets.LINEToken }}
      DISCORD_TOKEN: ${{ secrets.DiscordToken }}
      PRODUCTION: 0
      DEBUG: 1
      TEST: 1
      LOGGER: DISCORD_INTERNAL|40,MODEL_CHECK|30,PING_SPAM|10
      NO_FIELD_CHECK: 1
      GI_CLIENT_ID: ${{ secrets.GoogleIdentityClientID }}
      EMAIL_ACCOUNT: ${{ secrets.EmailAccount }}
      EMAIL_PASSWORD: ${{ secrets.EmailPassword }}
      SERVICE_SHORT_URL: http://rnnx.cc
      DDNS_PASSWORD: ${{ secrets.DDNSPassword }}
      IMGUR_CLIENT_ID: ${{ secrets.ImgurClientID }}
      DDNS_HOST: bot
      DDNS_DOMAIN: raenonx.cc

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install pylint
        run: |
          pip install pylint

      - name: Lint on `bot`
        run: |
          pylint bot

      - name: Lint on `doc`
        run: |
          pylint doc

      - name: Lint on `extdiscord`
        run: |
          pylint extdiscord

  django-tests:
    runs-on: windows-latest

    needs: [prepare]

    timeout-minutes: 10

    env:
      SECRET_KEY: ${{ secrets.DjangoSecretKey }}
      DJANGO_SETTINGS_MODULE: JellyBot.settings
      MONGO_URL: ${{ secrets.MongoDBURL }}
      MONGO_DB: 'GitHubActionTest#${{ github.run_number }}'
      LINE_SECRET: ${{ secrets.LINESecret }}
      LINE_TOKEN: ${{ secrets.LINEToken }}
      DISCORD_TOKEN: ${{ secrets.DiscordToken }}
      PRODUCTION: 0
      DEBUG: 1
      TEST: 1
      LOGGER: DISCORD_INTERNAL|40,MODEL_CHECK|30,PING_SPAM|10
      NO_FIELD_CHECK: 1
      GI_CLIENT_ID: ${{ secrets.GoogleIdentityClientID }}
      EMAIL_ACCOUNT: ${{ secrets.EmailAccount }}
      EMAIL_PASSWORD: ${{ secrets.EmailPassword }}
      SERVICE_SHORT_URL: http://rnnx.cc
      DDNS_PASSWORD: ${{ secrets.DDNSPassword }}
      IMGUR_CLIENT_ID: ${{ secrets.ImgurClientID }}
      DDNS_HOST: bot
      DDNS_DOMAIN: raenonx.cc

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Test independent utils (`bot` / `extutils`)
        run: |
          python manage.py test tests.bot
          python manage.py test tests.extutils

      - name: Test base data structures (`models`)
        run: |
          python manage.py test tests.models

      - name: Test data controller (`mongodb`)
        run: |
          python manage.py test tests.mongodb

      - name: All tests (Double check)
        run: |
          python manage.py test tests

  cleanup:
    runs-on: windows-latest

    needs: [prepare, django-tests]

    env:
      MONGO_URL: ${{ secrets.MongoDBURL }}
      DB_DROP: 'GitHubActionTest#${{ github.run_number }}'

    steps:
      - uses: actions/checkout@v2

      - name: Install pymongo
        run: |
          pip install pymongo dnspython

      - name: Drop MongoDB database
        shell: cmd
        run: |
          python mongodb/cli/drop_db.py %DB_DROP%